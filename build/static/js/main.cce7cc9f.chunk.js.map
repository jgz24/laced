{"version":3,"sources":["actions/index.js","components/navbar/search-bar/SearchBar.jsx","components/navbar/cart/Cart.jsx","components/navbar/NavBar.jsx","components/results/product-info-header/ProductInfoHeader.jsx","components/results/filters/filter/Filter.jsx","components/results/filters/filter-drop-down/drop-down-label/DropDownLabel.jsx","components/results/filters/filter-drop-down/FilterDropDown.jsx","components/results/filters/active-filters/ActiveFilters.jsx","components/results/filters/Filters.jsx","components/results/products/product/Product.jsx","components/results/products/Products.jsx","components/results/Results.jsx","components/results/products/product-info/ProductInfo.jsx","components/navbar/checkout/CheckOut.jsx","serviceWorker.js","reducers/cartItems.js","reducers/activeFilters.js","reducers/checkedFilters.js","reducers/products.js","reducers/index.js","index.js","components/app/App.js"],"names":["deleteCartItem","cartItem","type","payload","deleteActiveFilter","category","filterOption","modifyCheckedFilter","isChecked","searchApiCall","url","searchTerm","slice","dispatch","a","fetch","method","headers","res","json","result","products","length","console","log","withRouter","suggestionsListComponent","autocompleteArray","history","useDispatch","useState","filteredSuggestions","setFilteredSuggestions","showSuggestions","setShowSuggestions","formValue","setFormValue","handleSearch","toLowerCase","handleClick","event","tempFormValue","currentTarget","innerText","push","handleSubmit","preventDefault","tempFilteredSuggestions","className","map","suggestion","key","onClick","onSubmit","onChange","target","value","filter","indexOf","name","autoComplete","MyCart","cartItems","useSelector","state","cartItemsCount","setCartItemsCount","useEffect","tempTotalItems","Object","keys","to","NavBar","ProductType","filters","productTypeHeader","setProductTypeHeader","productQuantity","setProductQuantity","undefined","searchString","window","location","search","tempHeader","searchTermArray","split","unshift","join","filterKeys","headerArray","forEach","filterKey","categories","tempArray","i","completeHeader","Fragment","Filter","DropDownLabel","option","checked","handleCheckedChange","FilterDropDown","checkedFilter","checkedFilters","entries","idx","ActiveFilters","filterCategory","handleActiveFilterClick","Filters","activeFilters","setActiveFilters","filterArray","activeFilter","Product","product","animation","setAnimation","CSSTransition","in","timeout","classNames","pathname","Name","src","Img","alt","Sport","Price","Quantity","Products","Results","setProducts","filteredProducts","setFilteredProducts","handleGeneralFilters","filteredArray","tempFilteredArray","j","includes","filterPrice","tempPriceArray","price","parseInt","handlePriceFilter","sort","b","handleSortByFilter","handleFilteredProducts","addActiveFilter","ProductInfo","Activity","Color","Size","Brand","Id","cartButton","setCartButton","suggestedProducts","setSuggestedProducts","handleBack","goBack","vals","val","then","catch","err","suggested","title","height","width","CheckOut","cart","cartItemKeys","handleToken","token","fullBody","total","body","JSON","stringify","response","status","toast","autoClose","setTimeout","replace","balance","tempTotal","parseFloat","getBalance","tax","Math","round","getTax","color","stripeKey","billingAddress","shippingAddress","amount","configure","Boolean","hostname","match","cartItemsReducer","action","tempState","activeFiltersReducer","checkedFiltersReducer","Gender","Men","Women","Athletic","Casual","Black","White","Red","Blue","Purple","Yellow","Orange","Nike","Adidas","Vans","Converse","Basketball","Baseball","Golf","Football","Soccer","5","6","7","8","9","10","11","12","setProductsReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","persistor","persistStore","ReactDOM","render","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cce7cc9f.chunk.js","sourcesContent":["export const addCartItem = cartItem => {\r\n  return {\r\n    type: \"addCartItem\",\r\n    payload: cartItem\r\n  };\r\n};\r\n\r\nexport const deleteCartItem = cartItem => {\r\n  return {\r\n    type: \"removeCartItem\",\r\n    payload: cartItem\r\n  };\r\n};\r\n\r\nexport const removeAllCartItems = () => {\r\n  return {\r\n    type: \"removeAllCartItems\"\r\n  };\r\n};\r\n\r\nexport const addActiveFilter = (category, filterOption) => {\r\n  return {\r\n    type: \"addActiveFilter\",\r\n    category: category,\r\n    filterOption: filterOption\r\n  };\r\n};\r\n\r\nexport const deleteActiveFilter = (category, filterOption) => {\r\n  return {\r\n    type: \"deleteActiveFilter\",\r\n    category: category,\r\n    filterOption: filterOption\r\n  };\r\n};\r\n\r\nexport const modifyCheckedFilter = (category, filterOption, isChecked) => {\r\n  return {\r\n    type: \"modifyCheckedFilter\",\r\n    category: category,\r\n    filterOption: filterOption,\r\n    isChecked: isChecked\r\n  };\r\n};\r\n\r\nexport const resetAllFilters = () => {\r\n  return {\r\n    type: \"resetAllFilters\"\r\n  };\r\n};\r\n\r\nexport const setProducts = products => {\r\n  return {\r\n    type: \"setProducts\",\r\n    products: products\r\n  };\r\n};\r\n\r\nexport const searchApiCall = url => {\r\n  let searchTerm = url.slice(28);\r\n  return async dispatch => {\r\n    try {\r\n      const res = await fetch(url, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      const result = await res.json();\r\n      dispatch(setProducts(result));\r\n      if (searchTerm.length > 0) {\r\n        dispatch(resetAllFilters());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n","import React, {useState} from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {searchApiCall} from \"../../../actions\";\r\n\r\nfunction SearchBar({autocompleteArray, history}) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [filteredSuggestions,setFilteredSuggestions] = useState([]);\r\n    const [showSuggestions,setShowSuggestions] = useState(false);\r\n    const [formValue,setFormValue] = useState(\"\");\r\n\r\n    // Look for individual shoes via search bar.\r\n    // Takes in all filter options other than\r\n    // \"Sort By\"\r\n    const handleSearch = async searchTerm => {\r\n      let url = \"\";\r\n      if (\r\n        searchTerm.length === 0 ||\r\n        searchTerm.toLowerCase() === \"shoes\" ||\r\n        searchTerm.toLowerCase() === \"shoe\"\r\n      ) {\r\n        url = \"/search\";\r\n      } else {\r\n        url = `/search/${searchTerm}`;\r\n      }\r\n\r\n      dispatch(searchApiCall(url));\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const formValue = event.target.value;\r\n        const filteredSuggestions = autocompleteArray.filter(\r\n            suggestion => \r\n            suggestion.toLowerCase().indexOf(formValue.toLowerCase()) > -1\r\n        )\r\n\r\n        setFilteredSuggestions(filteredSuggestions);\r\n        setShowSuggestions(true);\r\n        setFormValue(formValue);\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        let tempFormValue = event.currentTarget.innerText;\r\n\r\n        setFilteredSuggestions([]);\r\n        setShowSuggestions(false);\r\n        handleSearch(tempFormValue);\r\n        setFormValue(\"\");\r\n        history.push(`/?search=${tempFormValue}`);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        handleSearch(formValue);\r\n        setFormValue(\"\");\r\n        history.push(`/?search=${formValue}`);\r\n    }\r\n\r\n    let suggestionsListComponent;\r\n    \r\n    if (showSuggestions && formValue) {\r\n        let tempFilteredSuggestions = filteredSuggestions; \r\n        // Only show up to 5 suggestions at a given time.\r\n        if (filteredSuggestions.length > 5) {\r\n          tempFilteredSuggestions = filteredSuggestions.slice(1,6);\r\n        }\r\n        if (tempFilteredSuggestions.length) {\r\n          suggestionsListComponent = (\r\n            <ul className=\"suggestions\">\r\n              {tempFilteredSuggestions.map((suggestion) => {\r\n                \r\n                return (\r\n                  <li  key={suggestion} onClick={handleClick}>\r\n                    {suggestion}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          );\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"search\" method=\"GET\" onSubmit={handleSubmit}>\r\n                <input className=\"searchBar\" onChange={handleChange} value={formValue} type=\"text\" name=\"search\" autoComplete=\"off\"></input>\r\n                <button onClick={handleSubmit} className=\"searchButton\" type=\"submit\"></button>\r\n                {suggestionsListComponent}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(SearchBar);","import React, {useState,useEffect} from \"react\";\r\nimport \"./Cart.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function MyCart() {\r\n    const cartItems = useSelector(state => state.cartItems);\r\n    \r\n    const [cartItemsCount, setCartItemsCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let tempTotalItems = Object.keys(cartItems).length;\r\n        setCartItemsCount(tempTotalItems);\r\n    },[cartItems])\r\n\r\n    return  (\r\n        <div className=\"cartFlex\">\r\n            <Link to=\"/checkout\">\r\n                <button className=\"myCart\"></button>\r\n            </Link>\r\n            <p>{cartItemsCount}</p>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport SearchBar from \"./search-bar/SearchBar\";\r\nimport Cart from \"./cart/Cart\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {searchApiCall} from \"../../actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport default function NavBar() { \r\n    const dispatch = useDispatch();\r\n\r\n    let autocompleteArray = [\r\n        'Shoes','Men Shoes', 'Women Shoes', 'Athletic Shoes', 'Casual Shoes', 'Nike', 'Nike Shoes',\r\n        'Adidas', 'Adidas Shoes', 'Vans', 'Vans Shoes', 'Converse', 'Converse Shoes', 'Basketball',\r\n        'Basketball Shoes', 'Baseball', 'Baseball Cleats', 'Golf', 'Golf Shoes', 'Football', \r\n        'Football Cleats', 'Soccer', 'Soccer Cleats'\r\n    ];\r\n\r\n    return (\r\n    <div>\r\n        <nav>\r\n            <Link to=\"/\">\r\n                <div>\r\n                    <button onClick={() => dispatch(searchApiCall(\"/search\"))} className=\"logo\"></button>\r\n                </div>\r\n            </Link>\r\n            <SearchBar autocompleteArray={autocompleteArray}/>\r\n            <Cart />    \r\n        </nav>\r\n    </div>\r\n    );\r\n}\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"./ProductInfoHeader.css\";\r\n\r\nexport default function ProductType({filters,products}) {\r\n    const [productTypeHeader,setProductTypeHeader] = useState(\"\");\r\n    const [productQuantity,setProductQuantity] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setProductQuantity(products.length === undefined ? 0 : products.length);\r\n    },[products.length]);\r\n\r\n    useEffect(() => {\r\n        // When user uses the search bar to search.\r\n        let searchString = window.location.search.slice(8);\r\n        let tempHeader=\"All Products\";\r\n       \r\n        if(searchString !== \"\") {\r\n            let searchTermArray = searchString.split(\"%20\");\r\n            searchTermArray.unshift(`Searched for: \"`);\r\n            searchTermArray.push(`\"`);\r\n\r\n            tempHeader = searchTermArray.join(\" \");\r\n            setProductTypeHeader(tempHeader);\r\n        }\r\n        // When user uses filters to search. \r\n        else {\r\n            let filterKeys = Object.keys(filters);\r\n            let headerArray = [];\r\n\r\n            // Loop through our filters object using its keys.\r\n            // Check which values are equal to true.\r\n            filterKeys.forEach(filterKey => {\r\n                // Get the filter options of each category\r\n                let categories = Object.keys(filters[filterKey]);\r\n                // If the category are either 'Gender','Activity', 'Brand', or 'Sport',\r\n                // we want to check if their value is true(they're checked in filter)\r\n                // and push the value + •. {E.G. Men•Athletic•Adidas•}\r\n                if (filterKey === 'Gender' || filterKey === 'Activity' || filterKey === 'Brand' || filterKey === 'Sport') {\r\n                    categories.map(category => filters[filterKey][category] === true ? headerArray.push(`${category}•`) : \"\");\r\n                }\r\n                // If the category is 'Color' we're checking if their value is true(they're checked in filter)\r\n                // BUT we're also pushing a \"+\" instead of \"•\" for filters that have multiple colors.\r\n                else if (filterKey === 'Color') {\r\n                    let tempArray = [];\r\n                    categories.map(category => filters[filterKey][category] === true ? tempArray.push(category) : \"\");\r\n                    for(let i = 1; i <= tempArray.length; i++) {\r\n                        if (tempArray.length > 0 && i === tempArray.length) {\r\n                            headerArray.push(`${tempArray[i-1]}•`);\r\n                        } else {\r\n                            headerArray.push(`${tempArray[i-1]}+`);\r\n                        }\r\n                    }\r\n                } \r\n            })\r\n\r\n            // We want \"Shoes\" to be displayed at the end of the string.\r\n            headerArray.push(\"Shoes\");\r\n\r\n            // Form a string given all the valid filters selected by the user.\r\n            let completeHeader= headerArray.join('');\r\n\r\n            // If the string is === 'Shoes' then no valid filters have been chosen so display \"All products\"\r\n            // Otherwise, display the string with valid filters.\r\n            completeHeader === 'Shoes' ? setProductTypeHeader(tempHeader) : setProductTypeHeader(completeHeader);\r\n        }\r\n\r\n    },[filters,products]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <p className=\"productInfo\">{productTypeHeader}</p>\r\n                    <div><p className=\"productQuantity\">{`(${productQuantity} Products)`}</p></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container lineBreak-products\"></div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./Filter.css\";\r\n\r\nexport default function Filter({category}) {\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"filterCategory\">{category}</button>\r\n            <button className=\"dropDownLogo\"></button>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport \"./DropDownLabel.css\"\r\n\r\nexport default function DropDownLabel({option, category, checked, handleCheckedChange}) {\r\n    const handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let isChecked = event.target.checked;\r\n\r\n        handleCheckedChange(category, name, isChecked);\r\n    }\r\n\r\n    return  (\r\n        <React.Fragment>\r\n            <label className=\"categoryLabel\">\r\n                <input name={option} onChange={handleChange} type=\"checkbox\" checked={checked}/>\r\n                {option}\r\n            </label>\r\n        </React.Fragment>\r\n    );               \r\n}","import React from \"react\";\r\nimport \"./FilterDropDown.css\";\r\nimport DropDownLabel from \"./drop-down-label/DropDownLabel\";\r\n\r\nexport default function FilterDropDown({checkedFilter, category, handleCheckedChange}) {\r\n    let checkedFilters = Object.entries(checkedFilter);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"filterFlexColumn\">\r\n            {checkedFilters.map((option,idx) =>\r\n                <DropDownLabel key={idx} category={category} option={option[0]} handleCheckedChange={handleCheckedChange} checked={option[1]}/>\r\n            )}\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./ActiveFilters.css\";\r\n\r\nexport default function ActiveFilters({filterCategory,filterOption,handleActiveFilterClick}) {\r\n\r\n    const handleClick = () => {\r\n        handleActiveFilterClick(filterCategory,filterOption);\r\n    } \r\n\r\n    return (\r\n        <div className=\"activeFilters\">\r\n            <button className=\"filterButton\" onClick={handleClick}>{filterOption}</button>\r\n            <button className=\"filterCrossLogo\" onClick={handleClick}></button>\r\n        </div>\r\n    )\r\n}","import React, {useState,useEffect} from \"react\";\r\nimport \"./Filters.css\"\r\nimport Filter from \"./filter/Filter\";\r\nimport FilterDropDown from \"./filter-drop-down/FilterDropDown\";\r\nimport ActiveFilters from \"./active-filters/ActiveFilters\";\r\n\r\nexport default function Filters({ filters, handleCheckedChange, handleActiveFilterClick}) {\r\n    const [activeFilters,setActiveFilters] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let filterKeys = Object.keys(filters);\r\n        let filterArray = [];\r\n\r\n        // Get all filter categories that are true.\r\n        filterKeys.forEach(filterKey => {\r\n            let categories = Object.keys(filters[filterKey]);\r\n            categories.map(category => filters[filterKey][category] === true ? filterArray.push({filterCategory : filterKey, filterOption : category}) : \"\");\r\n        })\r\n\r\n        setActiveFilters(filterArray);\r\n\r\n    },[filters]);\r\n\r\n    return ( \r\n        <React.Fragment>\r\n        <div className=\"container\">\r\n            <div className=\"filterFlex\">\r\n                {Object.keys(filters).map((filter,idx) => \r\n                <div key={idx} className=\"filter\">\r\n                    <Filter category={filter} />\r\n                    <FilterDropDown category={filter} checkedFilter={filters[filter]} handleCheckedChange={handleCheckedChange}/>\r\n                </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n        <div className=\"container lineBreak-products\"></div>\r\n        <div className=\"container\">\r\n            <div className=\"filterFlexActiveFilters\">\r\n                {activeFilters.map((activeFilter,idx) => \r\n                <ActiveFilters filterCategory={activeFilter.filterCategory} filterOption={activeFilter.filterOption} handleActiveFilterClick={handleActiveFilterClick}key={idx} /> \r\n                )}\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n    );  \r\n} \r\n","import React, { useState,useEffect } from \"react\";\r\nimport \"./Product.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CSSTransition} from 'react-transition-group'; \r\n\r\nexport default function Product({product}) {\r\n    const [animation,setAnimation] = useState(false);\r\n\r\n    // To be able to show product animation.\r\n    useEffect(() => {\r\n        setAnimation(true);\r\n    },[]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CSSTransition\r\n            in = {animation}\r\n            timeout={300}\r\n            classNames=\"animation-products\">\r\n                <div className=\"product\">\r\n                    <Link to={{\r\n                        pathname: `/product/${product.Name}`,\r\n                        state: product\r\n                    }}>\r\n                        <button className=\"imageButton\"><img src={product.Img} alt=\"\"></img></button>\r\n                    </Link>\r\n                    <div className=\"priceQuantityInfo\">\r\n                        <p>{product.Name}</p>  \r\n                        <p>{`${product.Sport}`}</p>\r\n                    </div>\r\n                    <div className=\"priceQuantityInfo\">\r\n                        <p>{`$${product.Price}`}</p>\r\n                        <p>{product.Quantity <= 4 ? `${product.Quantity} left!` : \"\"}</p>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./Products.css\";\r\nimport Product from \"./product/Product\";\r\n\r\nexport default function Products({products}) {\r\n   \r\n    // Case where empty object was returned by\r\n    // search. There's nothing to render,\r\n    // so just return null.\r\n    if (Object.keys(products).length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"filterFlexGrid\">\r\n                    {products.map((product,idx) => <Product key={idx} product={product} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport \"./Results.css\"\r\nimport ProductInfoHeader from \"./product-info-header/ProductInfoHeader\";\r\nimport Filters from \"./filters/Filters\";\r\nimport Products from \"./products/Products\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport { addActiveFilter, deleteActiveFilter} from \"../../actions\";\r\nimport {modifyCheckedFilter} from \"../../actions\";\r\n\r\nexport default function Results() {\r\n    const activeFilters = useSelector(state => state.activeFilters);\r\n    const checkedFilters = useSelector(state => state.checkedFilters);\r\n    const products = useSelector(state => state.setProducts);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Get products that satisfy the price filter requirement.\r\n        const handlePriceFilter = () => {\r\n            let filterPrice = activeFilters['Price'];\r\n\r\n            let tempPriceArray = [];    \r\n\r\n            for(let i = 0; i < products.length; i++) {\r\n                let price = parseInt(products[i]['Price']);\r\n                if(filterPrice === '$1-$50' && price > 50) {\r\n                    continue;\r\n                }\r\n                else if (filterPrice === '$50-$100' && (price < 50 || price > 100)) {\r\n                    continue;\r\n                }\r\n                else if(filterPrice === '$100-$150' && (price < 100 || price > 150)) {\r\n                    continue;\r\n                }\r\n                else if(filterPrice === '$150-$200' && (price < 150 || price > 200)) {\r\n                    continue;\r\n                }\r\n                else if(filterPrice === '$200+' && price < 200) {\r\n                    continue;\r\n                }\r\n                // Meets criteria, add to array.\r\n                tempPriceArray.push(products[i]);\r\n            }\r\n            return tempPriceArray;\r\n        }\r\n\r\n        // Get products with filters \"Gender, \"Activity\", \"Color\",\r\n        // \"Brand\", \"Sport\" and \"Size\"\r\n        const handleGeneralFilters = (filteredArray, keys) => {\r\n            let tempFilteredArray = [];\r\n\r\n            for(let i = 0; i<filteredArray.length; i++) {\r\n                for(let j = 0; j<keys.length; j++) {\r\n                    // Product doesn't have a sort by property so skip this key.\r\n                    // Already handle price so skip.\r\n                    if(keys[j] !== 'Sort By' && keys[j] !== 'Price') {\r\n                        // For keys (filter category) not equal to Price or Sort by.\r\n                        // Doesnt meet filter requirement, don't add to filtered list.\r\n                        if(activeFilters[keys[j]] !== filteredArray[i][[keys[j]]] && !filteredArray[i][[keys[j]]].includes(activeFilters[keys[j]])) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    // Add product to filtered list if it meets all filters.\r\n                    if(j === keys.length - 1) {\r\n                        tempFilteredArray.push(filteredArray[i]);            \r\n                    }  \r\n                }\r\n            }\r\n            return tempFilteredArray\r\n        }\r\n\r\n        // Sort the products by price.\r\n        const handleSortByFilter = (tempFilteredArray) => {\r\n            // Sort in ascending order.\r\n            if(activeFilters['Sort By'] === \"Low-High\") {\r\n                tempFilteredArray.sort((a, b) => { return a.Price - b.Price });\r\n            } \r\n            // Sort in descending order.\r\n            else if(activeFilters['Sort By'] === \"High-Low\") {\r\n                tempFilteredArray.sort((a, b) => { return b.Price - a.Price });\r\n            }\r\n            return tempFilteredArray;\r\n        }\r\n\r\n        const handleFilteredProducts = () => {\r\n            let keys = Object.keys(activeFilters);\r\n    \r\n            // No filters so display all products.\r\n            if(keys.length === 0) {\r\n                return products;\r\n            }\r\n    \r\n            let tempFilteredArray = [];\r\n    \r\n            // Handle price filter first and get products that match.\r\n            if (keys.includes('Price')) {\r\n                tempFilteredArray = handlePriceFilter();\r\n    \r\n                // Don't need to check for price filter as it was already handled.\r\n                keys = keys.filter(key => key !== 'Price');\r\n    \r\n                // If the only filter we have is price, then return now.\r\n                if(keys.length === 0) {\r\n                    return tempFilteredArray;\r\n                }\r\n            }\r\n    \r\n            // If we filtered products by price, then use\r\n            // those products to be filtered in the next steps.\r\n            if(tempFilteredArray.length > 0) {\r\n                tempFilteredArray = handleGeneralFilters(tempFilteredArray,keys);\r\n            } else {\r\n                // Otherwise, filter the original products.\r\n                tempFilteredArray = handleGeneralFilters(products,keys);\r\n            }\r\n            \r\n            // If filters include sort, do it last.\r\n            if (keys.includes('Sort By')) {\r\n                tempFilteredArray = handleSortByFilter(tempFilteredArray);\r\n            }\r\n    \r\n            return tempFilteredArray;\r\n        }\r\n\r\n        setFilteredProducts(handleFilteredProducts());\r\n\r\n    },[products,activeFilters,checkedFilters]);\r\n\r\n    // Handles the case where the user clicks a filter option\r\n    // from the drop down \r\n    const handleCheckedChange = (category, filterOption, isChecked) => {\r\n        // Determine if the selected filter should\r\n        // be added or removed from active filters.\r\n        if(isChecked) {\r\n            dispatch(addActiveFilter(category,filterOption));\r\n        }\r\n        else {\r\n            dispatch(deleteActiveFilter(category,filterOption));\r\n        }   \r\n        dispatch(modifyCheckedFilter(category,filterOption,isChecked));\r\n    };\r\n\r\n    // Handles the case where user clicks an active filter\r\n    // meaning it should be set to false.\r\n    const handleActiveFilterClick = (category, filterOption) => {\r\n        dispatch(deleteActiveFilter(category,filterOption));\r\n        dispatch(modifyCheckedFilter(category,filterOption,false));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ProductInfoHeader products={filteredProducts} filters={checkedFilters} />\r\n            <Filters filters={checkedFilters} handleCheckedChange={handleCheckedChange} handleActiveFilterClick={handleActiveFilterClick} />\r\n            <Products products={filteredProducts}/>\r\n        </React.Fragment>\r\n    );\r\n}","import React, {useState,useEffect} from \"react\";\r\nimport \"./ProductInfo.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport { addCartItem, deleteCartItem } from \"../../../../actions\";\r\n\r\nexport default function ProductInfo({history, location}) {\r\n    const cartItems = useSelector(state => state.cartItems);\r\n    const dispatch = useDispatch();\r\n\r\n    const {Name,Sport,Activity,Img,Color,Size,Quantity,Brand,Id} = location.state;\r\n    const [cartButton,setCartButton] = useState(\"\");\r\n    const [suggestedProducts,setSuggestedProducts] = useState([]);\r\n\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n        let vals = Object.keys(cartItems);\r\n        let cartButton = \"addCartButton\";\r\n\r\n        if(vals.length !== 0) {\r\n            for (let val in vals) {\r\n                if(cartItems[val].Id === Id) {\r\n                    cartButton=\"deleteCartButton\";\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        setCartButton(cartButton);\r\n\r\n    },[cartItems, Id])\r\n\r\n    useEffect(() => {\r\n        // If shoe is not associated with a sport then\r\n        // just search by brand. \r\n        let url = `/search/${Brand}`;\r\n\r\n        // If shoe is associated with a sport, then search\r\n        // shoes based on that sport\r\n        if(Sport !== \"\" & Sport !== \"Football\") {\r\n            url = `/search/${Sport}`;\r\n        }\r\n\r\n        fetch(url, {\r\n          method: \"GET\", \r\n          headers: {\r\n              'Content-Type' : 'application/json'\r\n          }\r\n        })\r\n          .then(res => res.json())\r\n          .then(json => {\r\n            setSuggestedProducts(json.filter(product => product.Name !== Name));\r\n          })\r\n          .catch(err => console.log(err));\r\n      }, [Name,Sport,Activity,Brand]);\r\n\r\n      \r\n      const handleCartClick = () => {\r\n        if(cartButton === \"addCartButton\") {\r\n            dispatch(addCartItem(location.state));\r\n            setCartButton(\"deleteCartButton\")\r\n        } else {\r\n            dispatch(deleteCartItem(location.state));\r\n            setCartButton(\"addCartButton\");\r\n        }\r\n      };\r\n\r\n    let suggested = <div className=\"similarProducts\"> \r\n                    {suggestedProducts.length > 0 && (Sport !== \"\" && Sport !== \"Football\") ? <h2>{`Other ${Sport} Products`}</h2> : <h2>{`Other ${Brand} Products`}</h2>}\r\n                    {suggestedProducts.map((product,idx) => {\r\n                        return (\r\n                            <Link key={idx} to={{\r\n                                pathname: `/product/${product.Name}`,\r\n                                state: product\r\n                            }}><img src={product.Img} title={product.Name} alt=\"\" height=\"100\" width=\"100\"></img>\r\n                            </Link> \r\n                        )\r\n                    })}\r\n                    </div>;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"productInfoContainer\">\r\n                <div className=\"goBack\">\r\n                    <button className=\"goBackButtonLogo\" onClick={handleBack}></button>\r\n                    <button className=\"goBackButton\" onClick={handleBack}>Back</button>\r\n                </div>\r\n                <div className=\"productInfoFlex\">\r\n                    <img className=\"productImage\" src={Img} alt=\"\"></img>\r\n                    <div className=\"productInformation\">\r\n                        <h2>{Name}</h2>\r\n                        <p>{`${Sport}` || `${Activity}`}</p>\r\n                        <p>{`Size: ${Size}`}</p>\r\n                        <p>{`Color: ${Color}`}</p>\r\n                        <p>{`${Quantity} in stock!`}</p>\r\n                        <p>{`$${location.state.Price}`}</p>\r\n                        <button className={cartButton} onClick={handleCartClick}></button> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {suggested} \r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./CheckOut.css\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {deleteCartItem, removeAllCartItems} from \"../../../actions\";\r\n\r\ntoast.configure();\r\n\r\nexport default function CheckOut({history}) {\r\n    const cartItems = useSelector(state => state.cartItems);\r\n    const dispatch = useDispatch();\r\n    let cartItemKeys = Object.keys(cartItems);\r\n\r\n\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleToken = async (token) => {\r\n        let fullBody = {...token};\r\n        fullBody.total = total;\r\n        fullBody.name = `${cartItems[cartItemKeys[0]].Name} and more!`;\r\n\r\n        const response = await \r\n                        fetch(\"/checkout\", \r\n                        {method: \"POST\",\r\n                        headers: {\r\n                            'Content-Type' : 'application/json'\r\n                        },\r\n                        body: JSON.stringify(fullBody)});\r\n\r\n        const result = await response.json();\r\n\r\n        console.log(result);\r\n\r\n        if(result.status === \"success\") {\r\n            toast(\"Success! Thanks for your purchase!\", {type: 'success', autoClose: 3000});\r\n            setTimeout( () => dispatch(removeAllCartItems()), 3000);\r\n            setTimeout( () => window.location.replace(\"/\"), 3000);\r\n        } \r\n        else {\r\n            toast(\"Something went wrong!\", {type: 'error'});\r\n        }\r\n    }\r\n\r\n    const getBalance = () => {\r\n        let tempTotal = 0;\r\n\r\n        cartItemKeys.forEach(key => tempTotal += parseFloat(cartItems[key].Price));\r\n        \r\n\r\n        return tempTotal;\r\n    }\r\n\r\n    const getTax = () => {\r\n        let tax = 0;\r\n\r\n        cartItemKeys.forEach(key => tax += parseFloat(cartItems[key].Price) * .0775);\r\n\r\n        return Math.round(tax*100)/100;\r\n    }\r\n\r\n    let balance = getBalance();\r\n    let tax = getTax();\r\n    let total = balance+tax;\r\n    let cart;\r\n\r\n    if(cartItemKeys.length <= 0) {\r\n        cart = \r\n            <div className=\"container\">\r\n                <div className=\"goBackCheckout\">\r\n                    <button className=\"goBackCheckoutLogo\"></button>\r\n                    <button className=\"goBackCheckoutButton\" onClick={handleBack}>Back</button>\r\n                </div>\r\n                <h1 className=\"yourCart\">YOUR CART IS EMPTY</h1>\r\n            </div>\r\n    } else {\r\n        cart = <div className=\"container\">\r\n                    <div className=\"goBackCheckout\">\r\n                        <button className=\"goBackCheckoutLogo\"></button>\r\n                        <button className=\"goBackCheckoutButton\" onClick={handleBack}>Back</button>\r\n                    </div>\r\n                    <h1 className=\"yourCart\">YOUR CART</h1>\r\n                    <div className=\"cartItemsFlex\"> \r\n                        <div className=\"cartItem\">\r\n                            <h2>Item</h2>\r\n                            <h2>Name</h2>\r\n                            <h2>Color</h2>\r\n                            <h2>Size</h2>\r\n                            <h2>Price</h2>\r\n                        </div>\r\n                        {cartItemKeys.map((key,idx) => {\r\n                            return (\r\n                            <div key={idx} className=\"cartItem\">\r\n                                <Link to={{\r\n                                    pathname: `/product/${cartItems[key].Name}`,\r\n                                    state: cartItems[key]\r\n                                }}><img src={cartItems[key].Img} title={cartItems[key].Name} alt=\"\" height=\"100\" width=\"100\"></img>\r\n                                </Link> \r\n                                <p>{cartItems[key].Name}</p>\r\n                                <p>{cartItems[key].Color.map(color => `${color} `)}</p>\r\n                                <p>{cartItems[key].Size}</p>\r\n                                <p>{`$${cartItems[key].Price}`}</p>    \r\n                                <button onClick={() => dispatch(deleteCartItem(cartItems[key]))}>REMOVE</button>\r\n                            </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className=\"totals\">\r\n                        <div className=\"cartItemFlex totalValues\">\r\n                            <p>{`$${balance}`}</p>\r\n                            <p>{`$${tax}`}</p>\r\n                            <p>{`$${total}`}</p>\r\n                        </div>\r\n                        <div className=\"cartItemFlex\">\r\n                            <p>Balance: </p>\r\n                            <p>Tax @ 7.75%: </p>\r\n                            <p>Total: </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"stripeButton\">\r\n                        <StripeCheckout stripeKey=\"pk_test_p3Sim8gJawuffayCyzXKDThx00QtgvDmh3\" \r\n                                    token={handleToken} \r\n                                    billingAddress\r\n                                    shippingAddress\r\n                                    amount={total*100}\r\n                                    name={cartItems.length > 1 ? `${cartItems[cartItemKeys[0]].Name} and more!` : `${cartItems[cartItemKeys[0]].Name}`}\r\n                        />\r\n                    </div>\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {cart}\r\n        </React.Fragment>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const cartItemsReducer = (state = [], action) => {\r\n  let { payload } = action;\r\n  let tempState = [...state];\r\n  switch (action.type) {\r\n    case \"addCartItem\":\r\n      tempState.push(payload);\r\n\r\n      return tempState;\r\n    case \"removeCartItem\":\r\n      return tempState.filter(cartItem => cartItem.Id !== payload.Id);\r\n\r\n    case \"removeAllCartItems\":\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartItemsReducer;\r\n","const activeFiltersReducer = (state = {}, action) => {\r\n  let tempState = { ...state };\r\n  let { category, filterOption } = action;\r\n  switch (action.type) {\r\n    case \"addActiveFilter\":\r\n      tempState[category] = filterOption;\r\n\r\n      return tempState;\r\n\r\n    case \"deleteActiveFilter\":\r\n      if (tempState[category]) {\r\n        delete tempState[category];\r\n      }\r\n\r\n      return tempState;\r\n\r\n    case \"resetAllFilters\":\r\n      tempState = {};\r\n\r\n      return tempState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activeFiltersReducer;\r\n","const checkedFiltersReducer = (\r\n  state = {\r\n    Gender: {\r\n      Men: false,\r\n      Women: false\r\n    },\r\n    Activity: {\r\n      Athletic: false,\r\n      Casual: false\r\n    },\r\n    Color: {\r\n      Black: false,\r\n      White: false,\r\n      Red: false,\r\n      Blue: false,\r\n      Purple: false,\r\n      Yellow: false,\r\n      Orange: false\r\n    },\r\n    Brand: {\r\n      Nike: false,\r\n      Adidas: false,\r\n      Vans: false,\r\n      Converse: false\r\n    },\r\n    Sport: {\r\n      Basketball: false,\r\n      Baseball: false,\r\n      Golf: false,\r\n      Football: false,\r\n      Soccer: false\r\n    },\r\n    Size: {\r\n      5: false,\r\n      6: false,\r\n      7: false,\r\n      8: false,\r\n      9: false,\r\n      10: false,\r\n      11: false,\r\n      12: false\r\n    },\r\n    Price: {\r\n      \"$1-$50\": false,\r\n      \"$50-$100\": false,\r\n      \"$100-$150\": false,\r\n      \"$150-$200\": false,\r\n      \"$200+\": false\r\n    },\r\n    \"Sort By\": {\r\n      \"Low-High\": false,\r\n      \"High-Low\": false\r\n    }\r\n  },\r\n  action\r\n) => {\r\n  let tempState = { ...state };\r\n  let { category, filterOption, isChecked } = action;\r\n  switch (action.type) {\r\n    case \"modifyCheckedFilter\":\r\n      let keys = Object.keys(tempState[category]);\r\n\r\n      // Set all filters within a filter\r\n      // category to be false.\r\n      for (let i = 0; i < keys.length; i++) {\r\n        tempState[category][keys[i]] = false;\r\n      }\r\n\r\n      // Set ONE filter to be true.\r\n      tempState[category][filterOption] = isChecked;\r\n\r\n      return tempState;\r\n\r\n    case \"resetAllFilters\":\r\n      tempState = {\r\n        Gender: {\r\n          Men: false,\r\n          Women: false\r\n        },\r\n        Activity: {\r\n          Athletic: false,\r\n          Casual: false\r\n        },\r\n        Color: {\r\n          Black: false,\r\n          White: false,\r\n          Red: false,\r\n          Blue: false,\r\n          Purple: false,\r\n          Yellow: false,\r\n          Orange: false\r\n        },\r\n        Brand: {\r\n          Nike: false,\r\n          Adidas: false,\r\n          Vans: false,\r\n          Converse: false\r\n        },\r\n        Sport: {\r\n          Basketball: false,\r\n          Baseball: false,\r\n          Golf: false,\r\n          Football: false,\r\n          Soccer: false\r\n        },\r\n        Size: {\r\n          5: false,\r\n          6: false,\r\n          7: false,\r\n          8: false,\r\n          9: false,\r\n          10: false,\r\n          11: false,\r\n          12: false\r\n        },\r\n        Price: {\r\n          \"$1-$50\": false,\r\n          \"$50-$100\": false,\r\n          \"$100-$150\": false,\r\n          \"$150-$200\": false,\r\n          \"$200+\": false\r\n        },\r\n        \"Sort By\": {\r\n          \"Low-High\": false,\r\n          \"High-Low\": false\r\n        }\r\n      };\r\n\r\n      return tempState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default checkedFiltersReducer;\r\n","const setProductsReducer = (state = [], action) => {\r\n  let { products } = action;\r\n  let tempState;\r\n  if (products !== undefined) {\r\n    tempState = [...products];\r\n  } else {\r\n    tempState = [];\r\n  }\r\n  switch (action.type) {\r\n    case \"setProducts\":\r\n      return tempState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setProductsReducer;\r\n","import cartItemsReducer from \"./cartItems\";\r\nimport activeFiltersReducer from \"./activeFilters\";\r\nimport checkedFiltersReducer from \"./checkedFilters\";\r\nimport setProductsReducer from \"./products\";\r\nimport { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage/session\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"cartItems\", \"activeFilters\", \"checkedFilters\"]\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  cartItems: cartItemsReducer,\r\n  activeFilters: activeFiltersReducer,\r\n  checkedFilters: checkedFiltersReducer,\r\n  setProducts: setProductsReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(ReduxThunk))\n);\n\nexport const persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport NavBar from \"../navbar/NavBar\";\r\nimport Results from \"../results/Results\";\r\nimport ProductInfo from \"../results/products/product-info/ProductInfo\";\r\nimport CheckOut from \"../navbar/checkout/CheckOut\";\r\nimport { searchApiCall } from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  // Get all shoes on initial site visit\r\n  // OR\r\n  // Get shoes based on user input via URL enter press\r\n  useEffect(() => {\r\n    // Look for individual shoes via search bar.\r\n    // Takes in all filter options other than\r\n    // \"Sort By\"\r\n    const handleSearch = async searchTerm => {\r\n      let url = \"\";\r\n      if (\r\n        searchTerm.length === 0 ||\r\n        searchTerm.toLowerCase() === \"shoes\" ||\r\n        searchTerm.toLowerCase() === \"shoe\"\r\n      ) {\r\n        url = \"/search\";\r\n      } else {\r\n        url = `/search/${searchTerm}`;\r\n      }\r\n      console.log(url);\r\n\r\n      dispatch(searchApiCall(url));\r\n    };\r\n\r\n    let searchTerm = window.location.search.slice(8);\r\n\r\n    handleSearch(searchTerm);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Results}></Route>\r\n          <Route path=\"/?search=:searchTerm\" component={Results}></Route>\r\n          <Route path=\"/product/:product\" component={ProductInfo}></Route>\r\n          <Route path=\"/checkout\" exact component={CheckOut}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}